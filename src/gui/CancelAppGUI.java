/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;  // provides the ability to trace out the errors 
import java.util.logging.Logger; // Provides the ability to trace out the errors 
import javax.swing.JOptionPane;
import javax.swing.JTextField;


/**
 *
 * @author am
 */
public class CancelAppGUI extends javax.swing.JFrame {

    /**
     * Creates new form CancelAppGUI
     */
    public CancelAppGUI() { // Hides respective fields and labels accordingly
        initComponents();
        Passport.repaint();
        ICLabel.setVisible(false);
        NRIC.setVisible(false);
        PassportLabel.setVisible(false);
        Passport.setVisible(false);
        Passport.revalidate();
        NRIC.setVisible(false);
        NRIC.revalidate();
        NRIC.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackBut = new javax.swing.JButton();
        CancelBut = new javax.swing.JButton();
        NRIC = new javax.swing.JTextField();
        Date = new com.toedter.calendar.JDateChooser();
        Name = new javax.swing.JTextField();
        SearchBut = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        PassportLabel = new javax.swing.JLabel();
        Passport = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ICLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        StatusSelect = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Status = new javax.swing.JTextField();
        SelectBut = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        Time = new javax.swing.JTextField();
        Vaccine = new javax.swing.JTextField();
        Centre = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BackBut.setText("Back");
        BackBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButActionPerformed(evt);
            }
        });

        CancelBut.setText("Cancel");
        CancelBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButActionPerformed(evt);
            }
        });

        Date.setDateFormatString("dd/MM/yyyy");

        SearchBut.setText("Search");
        SearchBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel12.setText("Confirmation");

        PassportLabel.setText("Passport No.");

        jLabel2.setText("Name");

        ICLabel.setText("NRIC");

        jLabel5.setText("Appointment Date ");

        jLabel4.setText("Vaccine Centre");

        jLabel3.setText("Vaccine Type");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setText("Personal Details");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel9.setText("Citizenship Status");

        StatusSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Citizen", "Non-Citizen" }));
        StatusSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatusSelectActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel11.setText("Vaccine Details");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel10.setText("Appointment Details");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Cancel Vaccination Appointment");

        jLabel6.setText("Appointment Time");

        Status.setEditable(false);

        SelectBut.setText("Confirm");
        SelectBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectButActionPerformed(evt);
            }
        });

        jLabel8.setText("Status");

        Vaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VaccineActionPerformed(evt);
            }
        });

        Centre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CentreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(BackBut)
                                .addGap(207, 207, 207)
                                .addComponent(CancelBut, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(99, 99, 99)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Vaccine, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(Centre))
                .addGap(115, 115, 115))
            .addGroup(layout.createSequentialGroup()
                .addGap(390, 390, 390)
                .addComponent(jLabel10)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(115, 115, 115)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(137, 137, 137)
                                        .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(136, 136, 136)
                                            .addComponent(NRIC, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(ICLabel)
                                            .addGap(250, 250, 250)))
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(137, 137, 137)
                                        .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(108, 108, 108)
                                        .addComponent(SearchBut, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(PassportLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addComponent(Passport, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(31, 31, 31))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(248, 248, 248))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(44, 44, 44)
                                    .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(26, 26, 26)
                                    .addComponent(StatusSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(SelectBut)
                                    .addGap(68, 68, 68)))))
                    .addGap(38, 38, 38)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(298, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Vaccine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(Centre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BackBut)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(CancelBut, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(jLabel1)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel9)
                    .addGap(27, 27, 27)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(StatusSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SelectBut)
                        .addComponent(jLabel8)
                        .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 19, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel12))
                    .addGap(18, 20, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(PassportLabel)
                        .addComponent(Passport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(4, 4, 4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NRIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ICLabel)
                        .addComponent(SearchBut))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                    .addComponent(jLabel11)
                    .addGap(30, 30, 30)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGap(18, 18, 18)
                    .addComponent(jLabel6)
                    .addContainerGap(114, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButActionPerformed
        // TODO add your handling code here:
        new AppointmentsGUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackButActionPerformed

    
    
       
   
    private void writefile(String filename, String content) throws FileNotFoundException, IOException
    {
        FileOutputStream fileOut = new FileOutputStream(filename); // Writes data into the file
        fileOut.write(content.getBytes()); // Encodes the string into a sequence of bytes and stores it in a byte array
        fileOut.close();
    }
    
    private void modifyfile(String filename, int line, String newline) throws IOException // Modify method to cancel appointments 
    {
                File fpeople = new File(filename);  // Open said file when method is used and scan
                Scanner s = new Scanner(fpeople);
                String content = ""; 
                int counter=0;                  // Declare counter for line
                while(s.hasNext())              // Go through lines
                {
                    
                    String details = s.nextLine();
                    if(counter != line && this.isSelected) // If the info is selected
                    {                                       // line intially set to 0 which then increaes when search is performed
                        content += details + "\r\n";       // if the line is same as selected data then not write, otherwise write details in the content 
                    }                                       
                    counter++;                              // Counter increment within while loop
                                                           
                }
                writefile(filename,content);    // filename is the chosen file 
                

                

    }
    
    
    
    private void CancelButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButActionPerformed
      
        String tosearch = Status.getText(); // Get text within status field
        if(tosearch.equals("Citizen")) // If the status is citizen 
        { 
            
            // Name, IC, Date, Time, Vaccine, Centre
            
            String date = ((JTextField)Date.getDateEditor().getUiComponent()).getText(); // Gets the text for citizen fields after search 
            String ab = Name.getText() +","+ NRIC.getText() +","+ date
                    +","+Time.getText() +","+ Vaccine.getText() +","+ Centre.getText() ;
            
            try {
                if(this.isSelected)
                {
                    modifyfile("CitizenAppoint.txt", this.line, ab);        // Run modifyfile with selected file
                    JOptionPane.showMessageDialog(this,"Appointment Cancelled.","System Message",JOptionPane.INFORMATION_MESSAGE); //Confirmation message
                }
                else
                {
                    JOptionPane.showMessageDialog(this,"Please select details","System Message",JOptionPane.INFORMATION_MESSAGE); // Validation
                }
                
            } catch (IOException ex) {
                Logger.getLogger(ModifyPDGUI.class.getName()).log(Level.SEVERE, null, ex);          // Validation
            }
            
        }
        
        else 
        {
            // Name, Passport, Date, Time, Vaccine, Centre
            
            String date = ((JTextField)Date.getDateEditor().getUiComponent()).getText();   
            String ab = Name.getText() +","+ Passport.getText() +","+ date
                    +","+Time.getText() +","+ Vaccine.getText() +","+ Centre.getText();
            
            try {
                if(this.isSelected)
                {
                    modifyfile("NonCitizenAppoint.txt", this.line, ab);     // Run modifyfile on selected file
                    JOptionPane.showMessageDialog(this,"Appointment Cancelled.","System Message",JOptionPane.INFORMATION_MESSAGE); // Confirmation message
                    
                }
                else
                {
                   JOptionPane.showMessageDialog(this,"Please select details.","System Message",JOptionPane.INFORMATION_MESSAGE); //Validation
                }
                
            } catch (IOException ex) {
                Logger.getLogger(ModifyPDGUI.class.getName()).log(Level.SEVERE, null, ex); // Validation
            }
        }
        this.isSelected=false; // Return status as false
        
    }//GEN-LAST:event_CancelButActionPerformed

      private int line = 0;
      private boolean isSelected=false;
        
    private void SearchButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButActionPerformed
       String tosearch = Status.getText();
        this.line = 0; // Setting line as 0 for modifyfile method 
        int flag=0;
        this.isSelected=false; // Intially setting selected status as false 
        if(tosearch.equals("Citizen"))
        {
            try
            {
                File fpeople = new File("CitizenAppoint.txt");
                Scanner s = new Scanner(fpeople);
                String IC = NRIC.getText();             // Get text within nric field
                while(s.hasNext())
                {
                    // Name, IC, Date, Time, Vaccine, Centre
                    
                    String details = s.nextLine();
                    String[] info = details.split(",");         //Helps in parsing complex strings easily using regex delimiters
                    if(info[1].equals(IC))                      // If the second string is equal IC set text and other info
                    {
                        Name.setText(info[0]);
                        Time.setText(info[3]);
                        Vaccine.setText(info[4]);
                        Centre.setText(info[5]);
                        Date date1=new SimpleDateFormat("dd/mm/yyyy").parse(info[2]);
                        Date.setDate(date1);
                        flag =1;
                        this.isSelected=true;
                        break;
                    }
                    
                    this.line += 1; // if not my line then add one and go to next line
                }
                if(flag==0)
                {
                    JOptionPane.showMessageDialog(
                            this,"No Appointment Booked.","System Message", // Validation 
                            JOptionPane.INFORMATION_MESSAGE);
                    NRIC.setText("");                                       // Empty nric field
                }
            }
            catch(FileNotFoundException fe)
            {
                JOptionPane.showMessageDialog(
                        this,"File not found.","System Message",            // Validation
                        JOptionPane.WARNING_MESSAGE);
            }
            catch(Exception e)
            {
                System.out.println("Error");                // Validation
            }
        }
        else
        {
            try
            {
                File fpeople = new File("NonCitizenAppoint.txt");
                Scanner s = new Scanner(fpeople);
                String passport = Passport.getText();           // Get passport field 
                while(s.hasNext())                              // While loop scan file lines
                {
                    
                    // Name, Passport, Date, Time, Vaccine, Centre
                    String details = s.nextLine();               
                    String[] info = details.split(",");   //Helps in parsing complex strings easily using regex delimiters
                    if(info[1].equals(passport))
                    {
                        Name.setText(info[0]);
                        Date date1=new SimpleDateFormat("dd/mm/yyyy").parse(info[2]);
                        Date.setDate(date1);
                        Time.setText(info[3]);
                        Vaccine.setText(info[4]);
                        Centre.setText(info[5]);
                        Date.setEnabled(true);
                        flag=1;
                        this.isSelected=true;
                        break;
                    }
                    this.line++;
                }
                if(flag==0)
                {
                    JOptionPane.showMessageDialog(
                            this,"No Appointment Booked.","System Message", // Validation
                            JOptionPane.INFORMATION_MESSAGE);
                    Passport.setText("");
                }
            }
            catch(FileNotFoundException fe)
            {
                JOptionPane.showMessageDialog(
                        this,"File not found.","System Message",        // Validation
                        JOptionPane.WARNING_MESSAGE);
            }
            catch(Exception e)
            {
                System.out.println("Error!");               // Validation
            }
        }
        
    }//GEN-LAST:event_SearchButActionPerformed

    private void StatusSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatusSelectActionPerformed

    }//GEN-LAST:event_StatusSelectActionPerformed

    private void SelectButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectButActionPerformed
        String citizenship = StatusSelect.getSelectedItem().toString();
        Status.setText(citizenship);
        CancelBut.setVisible(true);
        if(citizenship.equals("Citizen")) // If status is citizen display and hide respective fields
        {
            
            PassportLabel.setVisible(false);
            ICLabel.setVisible(true);
            NRIC.setVisible(true);
            NRIC.revalidate();
            NRIC.repaint();
            Passport.setVisible(false);
        }
        else if(citizenship.equals("Non-Citizen")) // If status is non citizen display and hide respective fields
        {
            PassportLabel.setVisible(true);
            ICLabel.setVisible(false);
            Passport.setVisible(true);
            Passport.revalidate();
            Passport.repaint();
            NRIC.setVisible(false);
        }
    }//GEN-LAST:event_SelectButActionPerformed

    private void VaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VaccineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VaccineActionPerformed

    private void CentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CentreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CentreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CancelAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CancelAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CancelAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CancelAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CancelAppGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBut;
    private javax.swing.JButton CancelBut;
    private javax.swing.JTextField Centre;
    private com.toedter.calendar.JDateChooser Date;
    private javax.swing.JLabel ICLabel;
    private javax.swing.JTextField NRIC;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField Passport;
    private javax.swing.JLabel PassportLabel;
    private javax.swing.JButton SearchBut;
    private javax.swing.JButton SelectBut;
    private javax.swing.JTextField Status;
    private javax.swing.JComboBox<String> StatusSelect;
    private javax.swing.JTextField Time;
    private javax.swing.JTextField Vaccine;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
