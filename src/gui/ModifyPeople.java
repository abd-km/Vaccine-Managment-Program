/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.regex.Pattern;
import javax.swing.*;

/**
 *
 * @author choww
 */
public class ModifyPeople extends javax.swing.JFrame {

    /**
     * Creates new form ModifyPeople
     */
    public ModifyPeople() {
        initComponents();
        ICLabel.setVisible(false);
        ICTxt.setVisible(false);
        PassportLabel.setVisible(false);
        PassportTxt.setVisible(false);
        SearchBut.setVisible(false);
        CitizenshipTxt.setEditable(false);
        NameTxt.setEditable(false);
        AgeTxt.setEditable(false);
        HealthIDTxt.setEditable(false);
        PhoneTxt.setEditable(false);
        CountryTxt.setEditable(false);
        PasswordTxt.setEditable(false);
        DOBDateChooser.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        UpdateBut = new javax.swing.JButton();
        BackBut = new javax.swing.JButton();
        ExitBut = new javax.swing.JButton();
        PassportLabel = new javax.swing.JLabel();
        PassportTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        AgeTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        PhoneTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        PasswordTxt = new javax.swing.JTextField();
        CitizenshipTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        SearchBut = new javax.swing.JButton();
        CitizenshipChoice = new javax.swing.JComboBox<>();
        SelectBut = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        HealthIDTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        CountryLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        NameTxt = new javax.swing.JTextField();
        CountryTxt = new javax.swing.JTextField();
        ICLabel = new javax.swing.JLabel();
        ICTxt = new javax.swing.JTextField();
        DOBDateChooser = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Modify Citizen/ Non-Citizen Detail");

        UpdateBut.setText("Update");
        UpdateBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButActionPerformed(evt);
            }
        });

        BackBut.setText("Back");
        BackBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButActionPerformed(evt);
            }
        });

        ExitBut.setText("Exit");
        ExitBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButActionPerformed(evt);
            }
        });

        PassportLabel.setText("Passport No.");

        jLabel5.setText("Age");

        jLabel9.setText("DOB");

        jLabel7.setText("Password");

        jLabel8.setText("Citizenship");

        SearchBut.setText("Search");
        SearchBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButActionPerformed(evt);
            }
        });

        CitizenshipChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Citizen", "Non-Citizen" }));
        CitizenshipChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CitizenshipChoiceActionPerformed(evt);
            }
        });

        SelectBut.setText("Select");
        SelectBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectButActionPerformed(evt);
            }
        });

        jLabel2.setText("Health ID");

        jLabel3.setText("Name");

        CountryLabel.setText("Country");

        jLabel6.setText("Phone");

        ICLabel.setText("NRIC");

        DOBDateChooser.setDateFormatString("dd/MM/yyyy");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(PassportLabel)
                            .addComponent(ICLabel)
                            .addComponent(jLabel8))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(NameTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HealthIDTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PhoneTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PasswordTxt)
                            .addComponent(PassportTxt)
                            .addComponent(ICTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CitizenshipTxt))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel5))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addComponent(AgeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(DOBDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CountryLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(CountryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(SearchBut, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CitizenshipChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(SelectBut, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(0, 68, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(BackBut)
                .addGap(93, 93, 93)
                .addComponent(UpdateBut, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExitBut)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(CitizenshipTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CitizenshipChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelectBut, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ICLabel)
                            .addComponent(ICTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PassportLabel)
                            .addComponent(PassportTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchBut, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(AgeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(HealthIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addComponent(DOBDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(PhoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CountryLabel)
                    .addComponent(CountryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(PasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackBut)
                    .addComponent(UpdateBut, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExitBut))
                .addGap(14, 14, 14))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButActionPerformed
        this.setVisible(false);
        people p = new people();
        p.setVisible(true);
    }//GEN-LAST:event_BackButActionPerformed

    private void SearchButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButActionPerformed
        String tosearch = CitizenshipTxt.getText();
        
        int flag=0;
        if(tosearch.equals("Citizen"))
        {
            try
            {
                File fpeople = new File("PeopleCitizen.txt");
                Scanner s = new Scanner(fpeople);
                String IC = ICTxt.getText();
                while(s.hasNext())
                {
                    String details = s.nextLine();
                    String[] info = details.split(",");
                    if(info[1].equals(IC))
                    {
                        NameTxt.setText(info[0]);
                        AgeTxt.setText(info[3]);
                        PhoneTxt.setText(info[4]);
                        HealthIDTxt.setText(info[5]);
                        PasswordTxt.setText(info[6]);
                        Date date1=new SimpleDateFormat("dd/MM/yyyy").parse(info[2]);  
                        DOBDateChooser.setDate(date1);
                        NameTxt.setEditable(true);
                        AgeTxt.setEditable(true);
                        HealthIDTxt.setEditable(true);
                        PhoneTxt.setEditable(true);
                        CountryTxt.setEditable(true);
                        PasswordTxt.setEditable(true);
                        DOBDateChooser.setEnabled(true);
                        flag =1;
                        break;
                    }
                }
                if(flag==0)
                {
                    JOptionPane.showMessageDialog(this,"Details not found in File","Details not found",JOptionPane.INFORMATION_MESSAGE);
                    ICTxt.setText("");
                }
            }
            catch(FileNotFoundException fe)
            {
                JOptionPane.showMessageDialog(this,"File not found","Error searching file",JOptionPane.WARNING_MESSAGE);
            }
            catch(Exception e)
            {
                System.out.println("Error");
            }
        }
        else
        {
            try
            {
                File fpeople = new File("PeopleNonCitizen.txt");
                Scanner s = new Scanner(fpeople);
                String Passport = PassportTxt.getText();
                while(s.hasNext())
                {
                    String details = s.nextLine();
                    String[] info = details.split(",");
                    if(info[1].equals(Passport))
                    {
                        NameTxt.setText(info[0]);
                        Date date1=new SimpleDateFormat("dd/MM/yyyy").parse(info[2]);  
                        DOBDateChooser.setDate(date1);
                        AgeTxt.setText(info[3]);
                        CountryTxt.setText(info[4]);
                        PhoneTxt.setText(info[5]);
                        HealthIDTxt.setText(info[6]);
                        PasswordTxt.setText(info[7]);
                        NameTxt.setEditable(true);
                        AgeTxt.setEditable(true);
                        HealthIDTxt.setEditable(true);
                        PhoneTxt.setEditable(true);
                        CountryTxt.setEditable(true);
                        PasswordTxt.setEditable(true);
                        DOBDateChooser.setEnabled(true);
                        flag=1;
                        break;
                    }
                }
                if(flag==0)
                {
                    JOptionPane.showMessageDialog(this,"Details not found in File","Details not found",JOptionPane.INFORMATION_MESSAGE);
                    PassportTxt.setText("");
                }
            }
            catch(FileNotFoundException fe)
            {
                JOptionPane.showMessageDialog(this,"File not found","Error searching file",JOptionPane.WARNING_MESSAGE);
            }
            catch(Exception e)
            {
                System.out.println("Error");
            }
        }

    }//GEN-LAST:event_SearchButActionPerformed

    private void CitizenshipChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CitizenshipChoiceActionPerformed

    }//GEN-LAST:event_CitizenshipChoiceActionPerformed

    private void SelectButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectButActionPerformed
        String citizenship = CitizenshipChoice.getSelectedItem().toString();
        CitizenshipTxt.setText(citizenship);
        SearchBut.setVisible(true);
        if(citizenship.equals("Citizen"))
        {
            ICLabel.setVisible(true);
            ICTxt.setVisible(true);
            ICTxt.revalidate();
            ICTxt.repaint();
            PassportTxt.setVisible(false);
            PassportLabel.setVisible(false);
            CountryLabel.setVisible(false);
            CountryTxt.setVisible(false);
        }
        else if(citizenship.equals("Non-Citizen"))
        {
            PassportLabel.setVisible(true);
            PassportTxt.setVisible(true);
            PassportTxt.revalidate();
            PassportTxt.repaint();
            ICLabel.setVisible(false);
            ICTxt.setVisible(false);
            CountryLabel.setVisible(true);
            CountryTxt.setVisible(true);
        }
    }//GEN-LAST:event_SelectButActionPerformed

    private void ExitButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitButActionPerformed

    private void UpdateButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButActionPerformed
        String citizenship = CitizenshipTxt.getText();
        String name = NameTxt.getText().trim();
        String DOB = ((JTextField)DOBDateChooser.getDateEditor().getUiComponent()).getText();
        String age = AgeTxt.getText().trim();
        String country = CountryTxt.getText().trim();
        String phone = PhoneTxt.getText().trim();
        String ID = HealthIDTxt.getText().trim();
        String password = PasswordTxt.getText().trim();
        String IC = ICTxt.getText().trim();
        String passport = PassportTxt.getText().trim();
        try
        {
            if(citizenship.equals("Citizen"))
            {
                 try
                 {
                    if(name.equals("") || DOB.equals("") || age.equals("") || phone.equals("") || ID.equals("") || password.equals("") || IC.equals("") || citizenship.equals(""))
                        JOptionPane.showMessageDialog(this,"All details are mandatory","Kindly fill in everything",JOptionPane.INFORMATION_MESSAGE);
                    else if(!Pattern.matches("^[0-9]+$",AgeTxt.getText())||!Pattern.matches("^[0-9]+$",PhoneTxt.getText()))
                    {
                        JOptionPane.showMessageDialog(this,"Age and Phone number Must be Number only","Invalid format",JOptionPane.INFORMATION_MESSAGE);
                    }
                    else
                    {
                        try
                        {
                            File fpeople = new File("PeopleCitizen.txt");
                            Scanner s = new Scanner(fpeople);
                            StringBuilder buffer = new StringBuilder();
                            
                            while(s.hasNext())
                            {
                                String details = s.nextLine();   
                                if(details.contains(IC))
                                {
                                    String linetochange = details;
                                    linetochange = linetochange.replace(details,name+","+IC+","+DOB+","+age+","+phone+","+ID+","+password);
                                    buffer.append(linetochange+System.lineSeparator());
                                }
                                else
                                {
                                    buffer.append(details+System.lineSeparator());
                                }
                            }
                            String filedetail = buffer.toString();
                            FileWriter fw = new FileWriter(fpeople);
                            fw.write(filedetail);
                            fw.close();
                        }
                        catch(Exception e)
                        {
                            System.out.println("Error");
                        }
                        JOptionPane.showMessageDialog(this,"Sucessfully Modified People Detail","Registered Message",JOptionPane.PLAIN_MESSAGE);
                        NameTxt.setText("");
                        DOBDateChooser.setCalendar(null);
                        AgeTxt.setText("");
                        CountryTxt.setText("");
                        PhoneTxt.setText("");
                        HealthIDTxt.setText("");
                        PasswordTxt.setText("");
                        ICTxt.setText("");
                        PassportTxt.setText("");
                        CitizenshipTxt.setText("");
                        CountryLabel.setVisible(false);
                        CountryTxt.setVisible(false);
                        ICLabel.setVisible(false);
                        ICTxt.setVisible(false);
                        PassportLabel.setVisible(false);
                        PassportTxt.setVisible(false);
                        
                    }
                 }
                 catch(Exception ioe)
                 {
                     System.out.println("io error");
                 }
            }
            else
            {
                try (PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter("PeopleNonCitizen.txt",true))))
                {
                    if(name.equals("") || DOB.equals("") || age.equals("") || country.equals("") || phone.equals("") || ID.equals("") || password.equals("") || citizenship.equals("") || passport.equals(""))
                        JOptionPane.showMessageDialog(this,"All details are mandatory","Kindly fill in everything",JOptionPane.INFORMATION_MESSAGE);
                    else if(!Pattern.matches("^[0-9]+$",AgeTxt.getText())||!Pattern.matches("^[0-9]+$",PhoneTxt.getText()))
                    {
                        JOptionPane.showMessageDialog(this,"Age and Phone number Must be Number only","Invalid format",JOptionPane.INFORMATION_MESSAGE);
                    }
                    else
                    {
                        try
                        {
                            File fpeople1 = new File("PeopleNonCitizen.txt");
                            Scanner s = new Scanner(fpeople1);
                            StringBuilder buffer = new StringBuilder();
                            
                            while(s.hasNext())
                            {
                                String details = s.nextLine();   
                                if(details.contains(passport))
                                {
                                    String linetochange = details;
                                    linetochange = linetochange.replace(details,name+","+passport+","+DOB+","+age+","+country+","+phone+","+ID+","+password);
                                    buffer.append(linetochange+System.lineSeparator());
                                }
                                else
                                {
                                    buffer.append(details+System.lineSeparator());
                                }
                            }
                            String filedetail = buffer.toString();
                            FileWriter fw1 = new FileWriter(fpeople1);
                            fw1.write(filedetail);
                            fw1.close();
                        }
                        catch(Exception e)
                        {
                            System.out.println("Error");
                        }

                        JOptionPane.showMessageDialog(this,"Sucessfully Modified People Detail","Registered Message",JOptionPane.PLAIN_MESSAGE);
                        NameTxt.setText("");
                        DOBDateChooser.setCalendar(null);
                        AgeTxt.setText("");
                        CountryTxt.setText("");
                        PhoneTxt.setText("");
                        HealthIDTxt.setText("");
                        PasswordTxt.setText("");
                        PassportTxt.setText("");
                        CitizenshipTxt.setText("");
                        ICTxt.setText("");
                        PassportLabel.setVisible(false);
                        PassportTxt.setVisible(false);
                        CountryLabel.setVisible(false);
                        CountryTxt.setVisible(false);
                        ICTxt.setVisible(false);
                        ICLabel.setVisible(false);
                    }
                }
                catch(IOException ioe)
                {
                    System.out.println("Error");
                }    
            }
        }
        catch(Exception e)
        {
            System.out.println("error");
        }
    }//GEN-LAST:event_UpdateButActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyPeople.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyPeople.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyPeople.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyPeople.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModifyPeople().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AgeTxt;
    private javax.swing.JButton BackBut;
    private javax.swing.JComboBox<String> CitizenshipChoice;
    private javax.swing.JTextField CitizenshipTxt;
    private javax.swing.JLabel CountryLabel;
    private javax.swing.JTextField CountryTxt;
    private com.toedter.calendar.JDateChooser DOBDateChooser;
    private javax.swing.JButton ExitBut;
    private javax.swing.JTextField HealthIDTxt;
    private javax.swing.JLabel ICLabel;
    private javax.swing.JTextField ICTxt;
    private javax.swing.JTextField NameTxt;
    private javax.swing.JLabel PassportLabel;
    private javax.swing.JTextField PassportTxt;
    private javax.swing.JTextField PasswordTxt;
    private javax.swing.JTextField PhoneTxt;
    private javax.swing.JButton SearchBut;
    private javax.swing.JButton SelectBut;
    private javax.swing.JButton UpdateBut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
