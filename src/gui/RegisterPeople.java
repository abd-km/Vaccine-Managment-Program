/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import gui.people;
import java.io.*;
import javax.swing.*;
import java.util.*;
import java.util.regex.Pattern;

/**
 *
 * @author choww
 */
public class RegisterPeople extends javax.swing.JFrame {

    /**
     * Creates new form RegisterPeople
     */
    public RegisterPeople() {
        initComponents();
        ICLabel.setVisible(false);
        ICTxt.setVisible(false);
        PassportLabel.setVisible(false);
        PassportTxt.setVisible(false);
        CountryTxt.setVisible(false);
        CountryLabel.setVisible(false);
        CitizenshipTxt.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        HealthIDTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        PhoneTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        NameTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        RegisterBut = new javax.swing.JButton();
        BackBut = new javax.swing.JButton();
        ExitBut = new javax.swing.JButton();
        DOBTxt = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        AgeTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        PasswordTxt = new javax.swing.JTextField();
        ClearBut = new javax.swing.JButton();
        ICLabel = new javax.swing.JLabel();
        ICTxt = new javax.swing.JTextField();
        CitizenshipChoice = new javax.swing.JComboBox<>();
        CountryLabel = new javax.swing.JLabel();
        CountryTxt = new javax.swing.JTextField();
        PassportLabel = new javax.swing.JLabel();
        PassportTxt = new javax.swing.JTextField();
        SelectBut = new javax.swing.JButton();
        CitizenshipTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Registration For Citizen/Non-Citizen");

        HealthIDTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HealthIDTxtActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        jLabel4.setText("D.O.B");

        jLabel5.setText("Health ID");

        NameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameTxtActionPerformed(evt);
            }
        });

        jLabel7.setText("Phone");

        RegisterBut.setText("Register");
        RegisterBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButActionPerformed(evt);
            }
        });

        BackBut.setText("Back");
        BackBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButActionPerformed(evt);
            }
        });

        ExitBut.setText("Exit");
        ExitBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButActionPerformed(evt);
            }
        });

        DOBTxt.setDateFormatString("dd/MM/yyyy");

        jLabel3.setText("Age");

        AgeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AgeTxtKeyTyped(evt);
            }
        });

        jLabel6.setText("Citizenship");

        jLabel8.setText("Password");

        ClearBut.setText("Clear");
        ClearBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButActionPerformed(evt);
            }
        });

        ICLabel.setText("NRIC");

        ICTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ICTxtActionPerformed(evt);
            }
        });

        CitizenshipChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Citizen", "Non-Citizen" }));
        CitizenshipChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CitizenshipChoiceActionPerformed(evt);
            }
        });

        CountryLabel.setText("Country");

        PassportLabel.setText("Passport No.");

        PassportTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PassportTxtActionPerformed(evt);
            }
        });

        SelectBut.setText("Select");
        SelectBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(BackBut)
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(RegisterBut)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ClearBut, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(PasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(70, 70, 70)
                                .addComponent(ExitBut))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(CountryLabel)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CountryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(PassportLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(PhoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(HealthIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ICLabel)
                                            .addComponent(jLabel4))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ICTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DOBTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PassportTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(NameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(67, 67, 67)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CitizenshipTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(CitizenshipChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(SelectBut, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AgeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(NameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(AgeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(CitizenshipTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CitizenshipChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelectBut, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CountryLabel)
                    .addComponent(CountryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PassportLabel)
                    .addComponent(PassportTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PhoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(ICLabel)
                    .addComponent(ICTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DOBTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(HealthIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RegisterBut, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ClearBut, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 40, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BackBut)
                            .addComponent(ExitBut))
                        .addGap(23, 23, 23))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameTxtActionPerformed

    private void ExitButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitButActionPerformed

    private void BackButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButActionPerformed
        this.setVisible(false);
        people p = new people();
        p.setVisible(true);
    }//GEN-LAST:event_BackButActionPerformed

    private void RegisterButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButActionPerformed
        try
        {
            String name = NameTxt.getText().trim();
            String DOB = ((JTextField)DOBTxt.getDateEditor().getUiComponent()).getText();
            String age = AgeTxt.getText().trim();
            String country = CountryTxt.getText().trim();
            String phone = PhoneTxt.getText().trim();
            String ID = HealthIDTxt.getText().trim();
            String password = PasswordTxt.getText().trim();
            String IC = ICTxt.getText().trim();
            String citizenship = CitizenshipTxt.getText().trim();
            String passport = PassportTxt.getText().trim();
            int flag=0;
            
            

            if(citizenship.equals("Citizen"))
            {
                try
                {
                    File fpeople1 = new File("PeopleCitizen.txt");
                    Scanner s1 = new Scanner(fpeople1);
                }
                catch(FileNotFoundException fe)
                {
                    PrintWriter pw1 = new PrintWriter("PeopleCitizen.txt");
                    pw1.print("");
                    pw1.close(); 
                }
                File fpeople = new File("PeopleCitizen.txt");
                Scanner s = new Scanner(fpeople);

                while(s.hasNext())
                {
                    String details = s.nextLine();
                    if(details.contains(IC))
                        flag=1;
                }
                try (PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter("PeopleCitizen.txt",true))))
                {
                    if(name.equals("") || DOB.equals("") || age.equals("") || phone.equals("") || ID.equals("") || password.equals("") || IC.equals("") || citizenship.equals(""))
                        JOptionPane.showMessageDialog(this,"All details are mandatory","Kindly fill in everything",JOptionPane.INFORMATION_MESSAGE);
                    else if(!Pattern.matches("^[0-9]+$",AgeTxt.getText())||!Pattern.matches("^[0-9]+$",PhoneTxt.getText()))
                    {
                        JOptionPane.showMessageDialog(this,"Age and Phone number Must be Number only","Invalid format",JOptionPane.INFORMATION_MESSAGE);
                    }
                    else if(flag==1)
                        JOptionPane.showMessageDialog(this,"User already Registered","Registration fail",JOptionPane.INFORMATION_MESSAGE);
                    else
                    {
                        pw.println(name+","+IC+","+DOB+","+age+","+phone+","+ID+","+password);
                        pw.close();
                        JOptionPane.showMessageDialog(this,"Sucessfully Registered People Detail","Registered Message",JOptionPane.PLAIN_MESSAGE);
                        NameTxt.setText("");
                        DOBTxt.setCalendar(null);
                        AgeTxt.setText("");
                        CountryTxt.setText("");
                        PhoneTxt.setText("");
                        HealthIDTxt.setText("");
                        PasswordTxt.setText("");
                        ICTxt.setText("");
                        PassportTxt.setText("");
                        CitizenshipTxt.setText("");
                        CountryLabel.setVisible(false);
                        CountryTxt.setVisible(false);
                        ICLabel.setVisible(false);
                        ICTxt.setVisible(false);
                        PassportLabel.setVisible(false);
                        PassportTxt.setVisible(false);
                        flag=0;
                    }
                    
                }
                catch(IOException ioe)
                {
                    System.out.println("Error");
                }   
            }
            else
            {
                try
                {
                    File fpeople2 = new File("PeopleNonCitizen.txt");
                    Scanner s2 = new Scanner(fpeople2);
                }
                catch(FileNotFoundException fe)
                {
                    PrintWriter pw1 = new PrintWriter("PeopleNonCitizen.txt");
                    pw1.print("");
                    pw1.close(); 
                }
                File fpeople2 = new File("PeopleNonCitizen.txt");
                Scanner s4 = new Scanner(fpeople2);
               
                
                while(s4.hasNext())
                {
                    String details = s4.nextLine();
                    if(details.contains(passport))
                        flag=1;
                }
                try (PrintWriter pw = new PrintWriter(new BufferedWriter(new FileWriter("PeopleNonCitizen.txt",true))))
                {
                    if(name.equals("") || DOB.equals("") || age.equals("") || country.equals("") || phone.equals("") || ID.equals("") || password.equals("") || citizenship.equals("") || passport.equals(""))
                        JOptionPane.showMessageDialog(this,"All details are mandatory","Kindly fill in everything",JOptionPane.INFORMATION_MESSAGE);
                    else if(!Pattern.matches("^[0-9]+$",AgeTxt.getText())||!Pattern.matches("^[0-9]+$",PhoneTxt.getText()))
                    {
                        JOptionPane.showMessageDialog(this,"Age and Phone number Must be Number only","Invalid format",JOptionPane.INFORMATION_MESSAGE);
                    }
                    else if(flag==1)
                        JOptionPane.showMessageDialog(this,"User already Registered","Registration fail",JOptionPane.INFORMATION_MESSAGE);
                    else
                    {
                        pw.println(name+","+passport+","+DOB+","+age+","+country+","+phone+","+ID+","+password);
                        pw.close();
                        JOptionPane.showMessageDialog(this,"Sucessfully Registered People Detail","Registered Message",JOptionPane.PLAIN_MESSAGE);
                        NameTxt.setText("");
                        DOBTxt.setCalendar(null);
                        AgeTxt.setText("");
                        CountryTxt.setText("");
                        PhoneTxt.setText("");
                        HealthIDTxt.setText("");
                        PasswordTxt.setText("");
                        PassportTxt.setText("");
                        CitizenshipTxt.setText("");
                        ICTxt.setText("");
                        PassportLabel.setVisible(false);
                        PassportTxt.setVisible(false);
                        CountryLabel.setVisible(false);
                        CountryTxt.setVisible(false);
                        ICTxt.setVisible(false);
                        ICLabel.setVisible(false);
                        flag=0;
                    }
                }
                catch(IOException ioe)
                {
                    System.out.println("Error");
                }
            }   
        }
        catch(Exception e)
        {
            System.out.println("Error");        
        }
                
    }//GEN-LAST:event_RegisterButActionPerformed

    private void ClearButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButActionPerformed
        NameTxt.setText("");
        DOBTxt.setCalendar(null);
        AgeTxt.setText("");
        CountryTxt.setText("");
        PhoneTxt.setText("");
        HealthIDTxt.setText("");
        PasswordTxt.setText("");
        ICTxt.setText("");
        PassportTxt.setText("");
        ICLabel.setVisible(false);
        ICTxt.setVisible(false);
        PassportLabel.setVisible(false);
        PassportTxt.setVisible(false);
        CitizenshipTxt.setText("");
        CountryLabel.setVisible(false);
        CountryTxt.setVisible(false);
    }//GEN-LAST:event_ClearButActionPerformed

    private void ICTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ICTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ICTxtActionPerformed

    private void CitizenshipChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CitizenshipChoiceActionPerformed

    }//GEN-LAST:event_CitizenshipChoiceActionPerformed

    private void HealthIDTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HealthIDTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HealthIDTxtActionPerformed

    private void SelectButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectButActionPerformed
        String citizenship = CitizenshipChoice.getSelectedItem().toString();
        CitizenshipTxt.setText(citizenship);
        if(citizenship.equals("Citizen"))
       {
           ICLabel.setVisible(true);
           ICTxt.setVisible(true);
           ICTxt.revalidate();
           ICTxt.repaint();
           PassportTxt.setVisible(false);
           PassportLabel.setVisible(false);
           CountryLabel.setVisible(false);
           CountryTxt.setVisible(false);
       }
       else if(citizenship.equals("Non-Citizen"))
       {
           PassportLabel.setVisible(true);
           PassportTxt.setVisible(true);
           PassportTxt.revalidate();
           PassportTxt.repaint();
           ICTxt.setVisible(false);
           ICLabel.setVisible(false);
           CountryLabel.setVisible(true);
           CountryTxt.setVisible(true);
           CountryTxt.revalidate();
           CountryTxt.repaint();
       }
    }//GEN-LAST:event_SelectButActionPerformed

    private void PassportTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PassportTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PassportTxtActionPerformed

    private void AgeTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AgeTxtKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_AgeTxtKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterPeople.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterPeople.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterPeople.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterPeople.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterPeople().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AgeTxt;
    private javax.swing.JButton BackBut;
    private javax.swing.JComboBox<String> CitizenshipChoice;
    private javax.swing.JTextField CitizenshipTxt;
    private javax.swing.JButton ClearBut;
    private javax.swing.JLabel CountryLabel;
    private javax.swing.JTextField CountryTxt;
    private com.toedter.calendar.JDateChooser DOBTxt;
    private javax.swing.JButton ExitBut;
    private javax.swing.JTextField HealthIDTxt;
    private javax.swing.JLabel ICLabel;
    private javax.swing.JTextField ICTxt;
    private javax.swing.JTextField NameTxt;
    private javax.swing.JLabel PassportLabel;
    private javax.swing.JTextField PassportTxt;
    private javax.swing.JTextField PasswordTxt;
    private javax.swing.JTextField PhoneTxt;
    private javax.swing.JButton RegisterBut;
    private javax.swing.JButton SelectBut;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables
}
