/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;
import java.io.*;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.JTextField;


/**
 *
 * @author am
 */
public class BookAppGUI extends javax.swing.JFrame {

    /**
     * Creates new form BookAppGUI
     */
    public BookAppGUI() { // Hides  labels and fields accordingly
        initComponents();
        Passport.repaint();
        ICLabel.setVisible(false);
        NRIC.setVisible(false);
        PassportLabel.setVisible(false);
        Passport.setVisible(false);
        Passport.revalidate();
        NRIC.setVisible(false);
        NRIC.revalidate();
        NRIC.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BookBut = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        VaccineType = new javax.swing.JComboBox<>();
        Date = new com.toedter.calendar.JDateChooser();
        VaccineCentre = new javax.swing.JComboBox<>();
        Time = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        StatusSelect = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        SelectBut = new javax.swing.JButton();
        Status = new javax.swing.JTextField();
        ICLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Passport = new javax.swing.JTextField();
        PassportLabel = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        SearchBut = new javax.swing.JButton();
        Name = new javax.swing.JTextField();
        NRIC = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(656, 450));

        BookBut.setText("Book");
        BookBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookButActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        VaccineType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pfizer", "Sinovac", "AstraZeneca", "Sputnik V", "CanSinoBio" }));
        VaccineType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VaccineTypeActionPerformed(evt);
            }
        });

        Date.setDateFormatString("dd/MM/yyyy");

        VaccineCentre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kuala Lumpur", "Bukit Jalil", "Shah Alam", "Sungai Buloh", "Subang Jaya" }));

        Time.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0900", "1000", "1100", "1200", "1300", "1400", "1500", "1600", "1700", "1800", "1900" }));

        jLabel3.setText("Vaccine Type");

        jLabel4.setText("Vaccine Centre");

        jLabel5.setText("Appointment Date ");

        jLabel6.setText("Appointment Time");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Book Vaccination Appointment");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel10.setText("Appointment Details");

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel11.setText("Vaccine Details");

        StatusSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Citizen", "Non-Citizen" }));
        StatusSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatusSelectActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel9.setText("Citizenship Status");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setText("Personal Details");

        jLabel8.setText("Status");

        SelectBut.setText("Confirm");
        SelectBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectButActionPerformed(evt);
            }
        });

        Status.setEditable(false);

        ICLabel.setText("NRIC");

        jLabel2.setText("Name");

        PassportLabel.setText("Passport No.");

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel12.setText("Confirmation");

        SearchBut.setText("Search");
        SearchBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Time, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Date, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(VaccineType, 0, 145, Short.MAX_VALUE)
                            .addComponent(VaccineCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 384, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addContainerGap(141, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(145, 145, 145)
                                .addComponent(BookBut, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(136, 136, 136)
                                    .addComponent(NRIC, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(ICLabel)
                                    .addGap(250, 250, 250)))
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(SearchBut, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PassportLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(Passport, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(37, 37, 37))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(254, 254, 254))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(44, 44, 44)
                        .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(StatusSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SelectBut)
                        .addGap(74, 74, 74))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StatusSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelectBut)
                    .addComponent(jLabel8)
                    .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel12))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(PassportLabel)
                    .addComponent(Passport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NRIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ICLabel)
                    .addComponent(SearchBut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(VaccineType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(VaccineCentre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel4)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(BookBut, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new AppointmentsGUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BookButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookButActionPerformed
        // TODO add your handling code here:
        
    try
        {
          
            String name = 
            Name.getText().trim(); // Gets text within the name field
            
            String IC = 
            NRIC.getText().trim(); // Gets text within the nric field
            
            String passport = 
            Passport.getText().trim(); // Gets text within the passport field
            
            String time = 
            Time.getSelectedItem().toString();  // Gets text within the time field
            
            String status = 
            Status.getText().trim();            // Gets text within the status field 
            
            String date = 
            ((JTextField)Date.getDateEditor().getUiComponent()).getText();  // Gets text within the date field 
            
            String type = 
            VaccineType.getSelectedItem().toString(); // Gets text within the vaccine type field 
            
            String centre = 
            VaccineCentre.getSelectedItem().toString(); // Gets text within the vaccine centre field 

            
            int accept=0;
            
            if(status.equals("Citizen")) // Gets text the status field is "Citizen"
            {
                try
                {
                    File appc = new File(
                            "CitizenAppoint.txt");
                    Scanner s1 = new Scanner(appc); // Scan file
                }
                catch(FileNotFoundException fne)
                {
                    PrintWriter capp = new PrintWriter(  
                            "CitizenAppoint.txt");  
                    capp.print("");
                    capp.close(); 
                }
                File fpeople = new File(
                        "CitizenAppoint.txt");
                Scanner lol = new Scanner(fpeople);
                
                while(lol.hasNext()) 
                {
                    String details = lol.nextLine(); // Scan lines for matching IC
                    if(details.contains(IC))
                        accept=1;
                }
                try (PrintWriter pw = new PrintWriter(
                        new BufferedWriter(
                                new FileWriter("CitizenAppoint.txt",true))))
                {
                    if(name.equals(""))
                        JOptionPane.showMessageDialog(
                                this,"User not registered","System Message", // Validation 
                                JOptionPane.INFORMATION_MESSAGE);
                    else if(accept==1)
                    {
                        JOptionPane.showMessageDialog(
                                this,"Appointment already booked","System Message", // Matching IC, appointment already booked
                                JOptionPane.INFORMATION_MESSAGE);
                    }
                    else
                    {
                        pw.println(name+","+IC+","+date+","+time+","+type+","+centre); // Successful booking, write data and close file
                        pw.close();
                        
                        Name.setText("");
                        NRIC.setText("");
                        Date.setCalendar(null);
                        ICLabel.setVisible(false);
                        NRIC.setVisible(false);
                        
                        JOptionPane.showMessageDialog(
                                this,"Appointment Booked","System Message", // Confirmation message 
                                JOptionPane.PLAIN_MESSAGE);
                        
                        this.setVisible(false);
                        AppointmentsGUI ac = new AppointmentsGUI(); // Back to appointments GUI
                        ac.setVisible(true);

                    }
                }
                catch(IOException ioe)
                {
                    System.out.println("Input/Output Error"); // Validation
                }
            }
            else
            {
                try
                {
                    File appnc = new File(
                            "NonCitizenAppoint.txt");
                    Scanner s2 = new Scanner(appnc); 
                }
                catch(FileNotFoundException fne)
                {
                    PrintWriter ak = new PrintWriter(
                            "NonCitizenAppoint.txt");
                    ak.print("");
                    ak.close(); 
                }
                File fpeople = new File(
                        "NonCitizenAppoint.txt");
                Scanner s = new Scanner(fpeople);
                
                while(s.hasNext())
                {
                    String details = s.nextLine();
                    if(details.contains(passport))
                        accept=1;
                }
                 try (PrintWriter la = new PrintWriter(new BufferedWriter(new FileWriter(  
                         "NonCitizenAppoint.txt",true))))               // Buffered is more efficient than Printer (writing)
                {
                    
                    if(name.equals(""))
                        JOptionPane.showMessageDialog(
                                this,"Unregistered user.","System Message",         // Validation 
                                JOptionPane.INFORMATION_MESSAGE);
                    
                    else if(accept==1)
                        JOptionPane.showMessageDialog(
                                this,"Appointment already booked.","System Message",    // Validation
                                JOptionPane.INFORMATION_MESSAGE);
                    else
                    {
                        
                        la.println(name+","+passport+","+date+","+time+","+type+","+centre); // Write data into file
                        la.close();
                        
                        Name.setText("");
                        Passport.setText("");
                        Date.setCalendar(null);
                        PassportLabel.setVisible(false);
                        Passport.setVisible(false);
                        
                        JOptionPane.showMessageDialog(
                        this,"Appointment Booked","System Message", // Confirmation Message
                        JOptionPane.PLAIN_MESSAGE);
                        
                        this.setVisible(false);
                        AppointmentsGUI ac = new AppointmentsGUI();
                        ac.setVisible(true);
                    }
                }
                catch(FileNotFoundException fe2)
                {
                    PrintWriter pw2 = new PrintWriter(
                            "NonCitizenAppoint.txt");
                    pw2.print("");
                    pw2.close();
                }
                catch(IOException ioe)
                {
                    System.out.println("IO exception");         // Validation
                }
            }
        }
        catch(FileNotFoundException fe3)
        {
            System.out.println("File not found,");          // Validation
        }

    }//GEN-LAST:event_BookButActionPerformed

    private void VaccineTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VaccineTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VaccineTypeActionPerformed

    private void StatusSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatusSelectActionPerformed

    }//GEN-LAST:event_StatusSelectActionPerformed

    private void SelectButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectButActionPerformed
        String citizenship = StatusSelect.getSelectedItem().toString();
        Status.setText(citizenship);
        BookBut.setVisible(true);
        
        if(citizenship.equals("Citizen")) // Displays respective buttons and labels when true
        {
            ICLabel.setVisible(true);
            NRIC.setVisible(true);
            NRIC.revalidate();
            NRIC.repaint();
            Passport.setVisible(false);
            PassportLabel.setVisible(false);
        }
        else if(citizenship.equals("Non-Citizen")) // Displays respective buttons and labels
        {
            PassportLabel.setVisible(true);
            Passport.setVisible(true);
            Passport.revalidate();
            Passport.repaint();
            ICLabel.setVisible(false);
            NRIC.setVisible(false);
        }
    }//GEN-LAST:event_SelectButActionPerformed

    private void SearchButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButActionPerformed
        String citizenship = Status.getText();
        int choice=0;
        if(citizenship.equals("Citizen")) // If status citizen
        {
            try
            {
                File bp = new File("PeopleCitizen.txt"); // Open citizen file and scan for nric
                Scanner s = new Scanner(bp);
                String IC = NRIC.getText();
                while(s.hasNext())                  // Go through the lines for IC using while loop
                {
                    String details = s.nextLine();
                    String[] info = details.split(",");
                    if(info[1].equals(IC))                  // Set name into the name field if IC is found
                    {
                        Name.setText(info[0]);
                        choice =1;
                        break;
                    }
                }
                if(choice==0)                       // If IC not found print system message (Validation)
                {
                    JOptionPane.showMessageDialog(this,"People not yet registered","System Message",JOptionPane.INFORMATION_MESSAGE);
                    NRIC.setText("");
                }
            }
            catch(FileNotFoundException fe)         // If file not found print system message (Validation)
            {
                JOptionPane.showMessageDialog(this,"File not found","file error",JOptionPane.WARNING_MESSAGE);
            }
            catch(Exception e)
            {
                System.out.println("Error");        // Validation
            }
        }
        else
        {
            try
            {
                File fpeople = new File("PeopleNonCitizen.txt"); // Otherwise open the non citizen file to scan for passport
                Scanner s = new Scanner(fpeople);
                String passport = Passport.getText();
                while(s.hasNext())                      // Scanning for passport with while loop
                {
                    String details = s.nextLine();
                    String[] info = details.split(",");
                    if(info[1].equals(passport))            // Set name into the name field if passport is found
                    {
                        Name.setText(info[0]);
                        choice =1;
                        break;
                    }
                }
                if(choice==0)           // Display system message if passport was not found (Validation)
                {
                    JOptionPane.showMessageDialog(this,"Record not Found","System Message",JOptionPane.INFORMATION_MESSAGE);
                    NRIC.setText("");
                }
                
            }
            catch(FileNotFoundException fe)         // Display system message if file was not found (Validation)
            {
                JOptionPane.showMessageDialog(this,"File not found","System Message",JOptionPane.WARNING_MESSAGE);
            }
            catch(Exception e) // Validation
            {
                System.out.println("Error");
            }
        }
    }//GEN-LAST:event_SearchButActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookAppGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BookBut;
    private com.toedter.calendar.JDateChooser Date;
    private javax.swing.JLabel ICLabel;
    private javax.swing.JTextField NRIC;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField Passport;
    private javax.swing.JLabel PassportLabel;
    private javax.swing.JButton SearchBut;
    private javax.swing.JButton SelectBut;
    private javax.swing.JTextField Status;
    private javax.swing.JComboBox<String> StatusSelect;
    private javax.swing.JComboBox<String> Time;
    private javax.swing.JComboBox<String> VaccineCentre;
    private javax.swing.JComboBox<String> VaccineType;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
