/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author am
 */
public class SearchVRGUI extends javax.swing.JFrame {

    /**
     * Creates new form SearchVwGUI
     */
    public SearchVRGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchChoice = new javax.swing.JComboBox<>();
        SelectBut = new javax.swing.JButton();
        VaccineChoice = new javax.swing.JComboBox<>();
        CentreChoice = new javax.swing.JComboBox<>();
        SearchBut = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PrintArea = new javax.swing.JTextArea();
        BackBut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SearchChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Centre Wise", "Vaccine Wise" }));

        SelectBut.setText("Select");
        SelectBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectButActionPerformed(evt);
            }
        });

        VaccineChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pfizer", "Sinovac", "AstraZeneca", "Sputnik V", "CanSinoBio" }));

        CentreChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kuala Lumpur", "Bukit Jalil", "Shah Alam", "Sungai Buloh", "Subang Jaya" }));

        SearchBut.setText("Search");
        SearchBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel2.setText("Search Vaccine Records");

        PrintArea.setColumns(20);
        PrintArea.setRows(5);
        jScrollPane1.setViewportView(PrintArea);

        BackBut.setText("Back");
        BackBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(SearchChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CentreChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(VaccineChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SelectBut, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBut, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackBut))
            .addGroup(layout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(jLabel2))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(SearchChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CentreChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(SelectBut, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(VaccineChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(SearchBut, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(BackBut)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SelectButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectButActionPerformed
        String choice = SearchChoice.getSelectedItem().toString();
        try
        {
            if(choice.equals("Centre Wise"))
            {
                CentreChoice.setVisible(true);
                SearchBut.setVisible(true);
                VaccineChoice.setVisible(false);
            }
            else
            {
                VaccineChoice.setVisible(true);
                SearchBut.setVisible(true);
                CentreChoice.setVisible(false);
            }
        }
        catch(Exception e)
        {
            System.out.println("Error");
        }
    }//GEN-LAST:event_SelectButActionPerformed

    private void SearchButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButActionPerformed
        String choice = SearchChoice.getSelectedItem().toString();
        try
        {
            File fs = new File("SupplyVaccine.txt");
            Scanner s = new Scanner(fs);
            PrintArea.setText("");
            
            
            
            if(choice.equals("Centre Wise"))
            {
                String centrechoice = CentreChoice.getSelectedItem().toString();
                switch(centrechoice)
                {
                    case "Kuala Lumpur":
                    {
                        while(s.hasNext())
                        {
                            String details = s.nextLine();
                            String[] info = details.split(",");
                            if(info[2].equals(centrechoice))
                            {
                                String formatted = String.format(
                                        "Code: %1$-8s Type: %2$-15s Quantity: %3$-10s Date: %4$-15s\n",
                                        info[0],
                                        info[1],
                                        info[3],
                                        info[4]);
                                PrintArea.append(formatted);
                            }
                        }
                        break;
                    }
                    case "Bukit Jalil":
                    {
                        while(s.hasNext())
                        {
                            String details = s.nextLine();
                            String[] info = details.split(",");
                            if(info[2].equals(centrechoice))
                            {
                                String formatted = String.format(
                                        "Code: %1$-8s Type: %2$-15s Quantity: %3$-10s Date: %4$-15s\n",
                                        info[0],info[1],info[3],info[4]);
                                PrintArea.append(formatted);
                            }
                        }
                        break;
                    }
                    case "Shah Alam":
                    {
                        while(s.hasNext())
                        {
                            String details = s.nextLine();
                            String[] info = details.split(",");
                            if(info[2].equals(centrechoice))
                            {
                                String formatted = String.format(
                                        "Code: %1$-8s Type: %2$-15s Quantity: %3$-10s Date: %4$-15s\n",
                                        info[0],info[1],info[3],info[4]);
                                PrintArea.append(formatted);
                            }
                        }
                        break;
                    }
                    case "Sungai Buloh":
                    {
                        while(s.hasNext())
                        {
                            String details = s.nextLine();
                            String[] info = details.split(",");
                            if(info[2].equals(centrechoice))
                            {
                                String formatted = String.format(
                                        "Code: %1$-8s Type: %2$-15s Quantity: %3$-10s Date: %4$-15s\n",
                                        info[0],info[1],info[3],info[4]);
                                PrintArea.append(formatted);
                            }
                        }
                        break;
                    }
                    case "Subang Jaya":
                    {
                        while(s.hasNext())
                        {
                            String details = s.nextLine();
                            String[] info = details.split(",");
                            if(info[2].equals(centrechoice))
                            {
                                String formatted = String.format(
                                        "Code: %1$-8s Type: %2$-15s Quantity: %3$-10s Date: %4$-15s\n",
                                        info[0],info[1],info[3],info[4]);
                                PrintArea.append(formatted);
                            }
                        }
                        break;
                    }
                }
            }
            else
            {
                String vaccinechoice = VaccineChoice.getSelectedItem().toString();
                switch(vaccinechoice)
                {
                    case "Pfizer":
                    {
                        while(s.hasNext())
                        {
                            String details = s.nextLine();
                            String[] info = details.split(",");
                            if(info[1].equals(vaccinechoice))
                            {
                                String formatted = String.format("%1$-8s %2$-15s %3$-10s %4$-15s\n",info[0],info[2],info[3],info[4]);
                                PrintArea.append(formatted);
                            }
                        }
                        break;
                    }
                    case "Sinovac":
                    {
                        while(s.hasNext())
                        {
                            String details = s.nextLine();
                            String[] info = details.split(",");
                            if(info[1].equals(vaccinechoice))
                            {
                                String formatted = String.format("%1$-8s %2$-15s %3$-10s %4$-15s\n",info[0],info[2],info[3],info[4]);
                                PrintArea.append(formatted);
                            }
                        }
                        break;
                    }
                    case "AstraZeneca":
                    {
                        while(s.hasNext())
                        {
                            String details = s.nextLine();
                            String[] info = details.split(",");
                            if(info[1].equals(vaccinechoice))
                            {
                                String formatted = String.format("%1$-8s %2$-15s %3$-10s %4$-15s\n",info[0],info[2],info[3],info[4]);
                                PrintArea.append(formatted);
                            }
                        }
                        break;
                    }
                    case "CanSinoBio":
                    {
                        while(s.hasNext())
                        {
                            String details = s.nextLine();
                            String[] info = details.split(",");
                            if(info[1].equals(vaccinechoice))
                            {
                                String formatted = String.format("%1$-8s %2$-15s %3$-10s %4$-15s\n",info[0],info[2],info[3],info[4]);
                                PrintArea.append(formatted);
                            }
                        }
                        break;
                    }
                    case "Sputnik V":
                    {
                        while(s.hasNext())
                        {
                            String details = s.nextLine();
                            String[] info = details.split(",");
                            if(info[1].equals(vaccinechoice))
                            {
                                String formatted = String.format("%1$-8s %2$-15s %3$-10s %4$-15s\n",info[0],info[2],info[3],info[4]);
                                PrintArea.append(formatted);
                            }
                        }
                        break;
                    }
                }
            }
        }
        catch(FileNotFoundException fe)
        {
            JOptionPane.showMessageDialog(this,"File records not found","File error",JOptionPane.WARNING_MESSAGE);
        }
        catch(Exception e)
        {
            System.out.println("error");
        }
    }//GEN-LAST:event_SearchButActionPerformed

    private void BackButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        VaccinationGUI sw = new VaccinationGUI();
        sw.setVisible(true);
    }//GEN-LAST:event_BackButActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchVRGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchVRGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchVRGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchVRGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchVRGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBut;
    private javax.swing.JComboBox<String> CentreChoice;
    private javax.swing.JTextArea PrintArea;
    private javax.swing.JButton SearchBut;
    private javax.swing.JComboBox<String> SearchChoice;
    private javax.swing.JButton SelectBut;
    private javax.swing.JComboBox<String> VaccineChoice;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
